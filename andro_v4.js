(function() {
    'use strict';

    try {
        console.log('Androzon plugin starting...');

        if (typeof Lampa === 'undefined') {
            console.error('Lampa API not loaded');
            return;
        }

        // –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–µ—Ä –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –≤–∏–¥–µ–æ —Å—Å—ã–ª–æ–∫
        function extractVideoUrl(html, source) {
            try {
                var parser = new DOMParser();
                var doc = parser.parseFromString(html, 'text/html');
                
                // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ iframe —Å –≤–∏–¥–µ–æ
                var iframes = doc.querySelectorAll('iframe');
                for (var i = 0; i < iframes.length; i++) {
                    var src = iframes[i].src;
                    if (src && (src.includes('.m3u8') || src.includes('mp4') || src.includes('video') || src.includes('stream'))) {
                        return src;
                    }
                }

                // –ò—â–µ–º –≤ —Å–∫—Ä–∏–ø—Ç–∞—Ö
                var scripts = doc.querySelectorAll('script');
                for (var j = 0; j < scripts.length; j++) {
                    var scriptContent = scripts[j].textContent || scripts[j].innerHTML;
                    
                    // –ò—â–µ–º m3u8 —Å—Å—ã–ª–∫–∏
                    var m3u8Match = scriptContent.match(/(https?:\/\/[^\s'"]+\.m3u8[^\s'"]*)/);
                    if (m3u8Match) return m3u8Match[0];
                    
                    // –ò—â–µ–º mp4 —Å—Å—ã–ª–∫–∏
                    var mp4Match = scriptContent.match(/(https?:\/\/[^\s'"]+\.mp4[^\s'"]*)/);
                    if (mp4Match) return mp4Match[0];
                    
                    // –ò—â–µ–º –æ–±—â–∏–µ –≤–∏–¥–µ–æ —Å—Å—ã–ª–∫–∏
                    var videoMatch = scriptContent.match(/(https?:\/\/[^\s'"]*(?:video|stream|player)[^\s'"]*)/i);
                    if (videoMatch) return videoMatch[0];
                }

                // –î–ª—è Kinoger –∏—â–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
                if (source === 'kinoger') {
                    var videoDivs = doc.querySelectorAll('[class*="video"], [id*="video"]');
                    for (var k = 0; k < videoDivs.length; k++) {
                        var htmlContent = videoDivs[k].innerHTML;
                        var urlMatch = htmlContent.match(/(https?:\/\/[^\s'"]+\.(?:m3u8|mp4)[^\s'"]*)/);
                        if (urlMatch) return urlMatch[0];
                    }
                }

                return null;
            } catch (e) {
                console.error('Parser error:', e);
                return null;
            }
        }

        // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        function component(object) {
            console.log('Androzon component created');
            
            var network = new Lampa.Request();
            var scroll = new Lampa.Scroll({mask: true, over: true});
            var movie = object.movie || {};
            var currentSource = null;

            this.create = function() {
                return this.render();
            };

            this.render = function() {
                return scroll.render();
            };

            this.start = function() {
                this.initialize();
            };

            this.initialize = function() {
                console.log('Androzon initializing for movie:', movie.title || movie.name);
                
                scroll.body().addClass('torrent-list');
                this.showMainScreen();
                this.setupNavigation();
            };

            this.setupNavigation = function() {
                Lampa.Controller.add('content', {
                    toggle: () => {
                        Lampa.Controller.collectionSet(scroll.render());
                        var firstSelector = scroll.render().find('.selector').first()[0];
                        if (firstSelector) {
                            Lampa.Controller.collectionFocus(firstSelector, scroll.render());
                        }
                    },
                    up: () => {
                        if (Navigator.canmove('up')) Navigator.move('up');
                        else Lampa.Controller.toggle('head');
                    },
                    down: () => {
                        if (Navigator.canmove('down')) Navigator.move('down');
                    },
                    left: () => {
                        Lampa.Controller.toggle('menu');
                    },
                    back: () => {
                        Lampa.Activity.backward();
                    }
                });
                
                Lampa.Controller.toggle('content');
            };

            this.showMainScreen = function() {
                scroll.clear();
                
                // –ó–∞–≥–æ–ª–æ–≤–æ–∫
                var header = $('<div class="choice__head" style="padding: 20px; background: rgba(0,0,0,0.5); border-bottom: 1px solid rgba(255,255,255,0.2);">' +
                    '<div class="choice__title" style="font-size: 24px; font-weight: bold; margin-bottom: 10px;">üé¨ Androzon</div>' +
                    '<div class="choice__subtitle" style="font-size: 14px; color: #aaa;">–ü–æ–∏—Å–∫: ' + (movie.title || movie.name || '—Ñ–∏–ª—å–º') + '</div>' +
                    '</div>');
                scroll.append(header);

                // –ò—Å—Ç–æ—á–Ω–∏–∫–∏
                var sources = [
                    {
                        name: 'üîç Kinoger',
                        id: 'kinoger',
                        searchUrl: function(title) {
                            return 'https://kinoger.com/stream/search/' + encodeURIComponent(title);
                        },
                        color: '#FF6B35'
                    },
                    {
                        name: 'üá©üá™ BS.to', 
                        id: 'bsto',
                        searchUrl: function(title) {
                            // BS.to —Ç—Ä–µ–±—É–µ—Ç —Ç–æ—á–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞ –Ω–µ–º–µ—Ü–∫–æ–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ
                            var germanTitle = title.replace(/ /g, '-').toLowerCase();
                            return 'https://bs.to/serie/' + germanTitle;
                        },
                        color: '#4A90E2'
                    },
                    {
                        name: 'üé• Cine.to',
                        id: 'cineto', 
                        searchUrl: function(title) {
                            return 'https://cine.to/movies?q=' + encodeURIComponent(title);
                        },
                        color: '#50E3C2'
                    }
                ];

                sources.forEach(source => {
                    var sourceElement = $('<div class="selector" style="padding: 20px; margin: 15px; background: ' + source.color + '; border-radius: 12px; cursor: pointer;">' +
                        '<div style="font-size: 18px; font-weight: bold; margin-bottom: 8px;">' + source.name + '</div>' +
                        '<div style="font-size: 12px; opacity: 0.9;">–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–æ–∏—Å–∫–∞</div>' +
                        '</div>');

                    sourceElement.on('hover:enter', () => {
                        this.searchOnSource(source);
                    });

                    scroll.append(sourceElement);
                });

                // –î–µ–º–æ —Å–µ–∫—Ü–∏—è
                var demoHeader = $('<div style="padding: 20px 20px 10px 20px; font-size: 16px; font-weight: bold; color: #fff;">üì∫ –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Ç–æ–∫–∏:</div>');
                scroll.append(demoHeader);

                var demoStreams = [
                    {
                        title: '–¢–µ—Å—Ç–æ–≤—ã–π HLS (Mux)',
                        url: 'https://test-streams.mux.dev/x36xhzz/x36xhzz.m3u8',
                        quality: '720p',
                        source: 'Demo'
                    },
                    {
                        title: '–¢–µ—Å—Ç–æ–≤—ã–π MP4 (Google)',
                        url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4',
                        quality: '1080p',
                        source: 'Demo'
                    },
                    {
                        title: '–¢–µ—Å—Ç–æ–≤—ã–π HLS (Apple)',
                        url: 'https://devstreaming-cdn.apple.com/videos/streaming/examples/img_bipbop_adv_example_ts/master.m3u8',
                        quality: '480p',
                        source: 'Demo'
                    }
                ];

                demoStreams.forEach(stream => {
                    var streamElement = $('<div class="selector" style="padding: 15px; margin: 10px 20px; background: rgba(255,255,255,0.1); border-radius: 8px; cursor: pointer;">' +
                        '<div style="font-size: 14px; font-weight: bold; margin-bottom: 5px;">' + stream.title + '</div>' +
                        '<div style="font-size: 11px; color: #aaa;">' + stream.quality + ' ‚Ä¢ ' + stream.source + '</div>' +
                        '</div>');

                    streamElement.on('hover:enter', () => {
                        Lampa.Player.play({
                            url: stream.url,
                            title: stream.title,
                            quality: { [stream.quality]: stream.url }
                        });
                    });

                    scroll.append(streamElement);
                });
            };

            this.searchOnSource = function(source) {
                console.log('Searching on:', source.name);
                currentSource = source;
                
                scroll.clear();
                
                var loading = $('<div style="padding: 40px 20px; text-align: center;">' +
                    '<div class="broadcast__scan" style="margin: 20px auto;"><div></div></div>' +
                    '<div style="color: #999; font-size: 16px;">–ò—â–µ–º –Ω–∞ ' + source.name + '...</div>' +
                    '</div>');
                scroll.append(loading);

                var searchTitle = movie.title || movie.name || 'film';
                var searchUrl = source.searchUrl(searchTitle);

                console.log('Search URL:', searchUrl);

                // –ò—Å–ø–æ–ª—å–∑—É–µ–º native –¥–ª—è –æ–±—Ö–æ–¥–∞ CORS —á–µ—Ä–µ–∑ Lampa
                network.native(searchUrl, (html) => {
                    if (html) {
                        this.processSearchResults(html, source);
                    } else {
                        this.showError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É');
                    }
                }, (error) => {
                    console.error('Search error:', error);
                    this.showError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ' + error);
                });
            };

            this.processSearchResults = function(html, source) {
                console.log('Processing results from:', source.name);
                
                var videoUrl = extractVideoUrl(html, source.id);
                
                if (videoUrl) {
                    this.showVideoFound(videoUrl, source);
                } else {
                    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏
                    this.showLinksFound(html, source);
                }
            };

            this.showVideoFound = function(videoUrl, source) {
                scroll.clear();
                
                var header = $('<div class="choice__head" style="padding: 20px; background: rgba(0,0,0,0.5); border-bottom: 1px solid rgba(255,255,255,0.2);">' +
                    '<div class="choice__title" style="font-size: 24px; font-weight: bold; margin-bottom: 5px;">‚úÖ –ù–∞–π–¥–µ–Ω–æ!</div>' +
                    '<div class="choice__subtitle" style="font-size: 14px; color: #aaa;">–ò—Å—Ç–æ—á–Ω–∏–∫: ' + source.name + '</div>' +
                    '</div>');
                scroll.append(header);

                var videoElement = $('<div class="selector" style="padding: 20px; margin: 20px; background: rgba(76, 175, 80, 0.2); border: 2px solid #4CAF50; border-radius: 12px; cursor: pointer;">' +
                    '<div style="font-size: 18px; font-weight: bold; margin-bottom: 10px; color: #4CAF50;">üé¨ ' + (movie.title || movie.name) + '</div>' +
                    '<div style="font-size: 14px; color: #aaa; margin-bottom: 15px; word-break: break-all;">' + videoUrl.substring(0, 100) + '...</div>' +
                    '<div style="background: #4CAF50; color: white; padding: 10px 20px; border-radius: 6px; text-align: center; font-weight: bold;">‚ñ∂ –í–û–°–ü–†–û–ò–ó–í–ï–°–¢–ò</div>' +
                    '</div>');

                videoElement.on('hover:enter', () => {
                    Lampa.Player.play({
                        url: videoUrl,
                        title: movie.title || movie.name,
                        quality: { 'Auto': videoUrl }
                    });
                });

                scroll.append(videoElement);

                // –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
                var backButton = $('<div class="selector" style="padding: 15px; margin: 20px; background: rgba(255,255,255,0.2); border-radius: 8px; text-align: center; font-weight: bold;">' +
                    '‚Üê –ù–∞–∑–∞–¥ –∫ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º' +
                    '</div>');

                backButton.on('hover:enter', () => {
                    this.showMainScreen();
                });

                scroll.append(backButton);
            };

            this.showLinksFound = function(html, source) {
                scroll.clear();
                
                var header = $('<div class="choice__head" style="padding: 20px; background: rgba(0,0,0,0.5); border-bottom: 1px solid rgba(255,255,255,0.2);">' +
                    '<div class="choice__title" style="font-size: 24px; font-weight: bold; margin-bottom: 5px;">üîó –°—Å—ã–ª–∫–∏ –Ω–∞–π–¥–µ–Ω—ã</div>' +
                    '<div class="choice__subtitle" style="font-size: 14px; color: #aaa;">–ò—Å—Ç–æ—á–Ω–∏–∫: ' + source.name + ' (–Ω—É–∂–µ–Ω –ø–∞—Ä—Å–µ—Ä)</div>' +
                    '</div>');
                scroll.append(header);

                var message = $('<div style="padding: 20px; text-align: center; color: #ffa726;">' +
                    '<div style="font-size: 16px; margin-bottom: 10px;">–ù–∞–π–¥–µ–Ω—ã —Å—Å—ã–ª–∫–∏, –Ω–æ –Ω—É–∂–µ–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä</div>' +
                    '<div style="font-size: 14px; color: #aaa;">–î–ª—è ' + source.name + ' —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤</div>' +
                    '</div>');
                scroll.append(message);

                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–º–æ-–ø–æ—Ç–æ–∫–∏ –∫–∞–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É
                var demoHeader = $('<div style="padding: 20px 20px 10px 20px; font-size: 16px; font-weight: bold; color: #fff;">üéØ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ - —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Ç–æ–∫–∏:</div>');
                scroll.append(demoHeader);

                var demoStreams = [
                    {
                        title: '–¢–µ—Å—Ç–æ–≤—ã–π HLS –ø–æ—Ç–æ–∫',
                        url: 'https://test-streams.mux.dev/x36xhzz/x36xhzz.m3u8',
                        quality: '720p'
                    },
                    {
                        title: '–¢–µ—Å—Ç–æ–≤—ã–π MP4 –ø–æ—Ç–æ–∫', 
                        url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4',
                        quality: '1080p'
                    }
                ];

                demoStreams.forEach(stream => {
                    var streamElement = $('<div class="selector" style="padding: 15px; margin: 10px 20px; background: rgba(255,255,255,0.1); border-radius: 8px; cursor: pointer;">' +
                        '<div style="font-size: 14px; font-weight: bold; margin-bottom: 5px;">' + stream.title + '</div>' +
                        '<div style="font-size: 11px; color: #aaa;">–ö–∞—á–µ—Å—Ç–≤–æ: ' + stream.quality + '</div>' +
                        '</div>');

                    streamElement.on('hover:enter', () => {
                        Lampa.Player.play({
                            url: stream.url,
                            title: stream.title,
                            quality: { [stream.quality]: stream.url }
                        });
                    });

                    scroll.append(streamElement);
                });

                var backButton = $('<div class="selector" style="padding: 15px; margin: 20px; background: rgba(255,255,255,0.2); border-radius: 8px; text-align: center; font-weight: bold;">' +
                    '‚Üê –ù–∞–∑–∞–¥ –∫ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º' +
                    '</div>');

                backButton.on('hover:enter', () => {
                    this.showMainScreen();
                });

                scroll.append(backButton);
            };

            this.showError = function(message) {
                scroll.clear();
                
                var errorElement = $('<div style="padding: 40px 20px; text-align: center; color: #f44336;">' +
                    '<div style="font-size: 24px; margin-bottom: 20px;">‚ùå –û—à–∏–±–∫–∞</div>' +
                    '<div style="font-size: 16px; margin-bottom: 30px;">' + message + '</div>' +
                    '</div>');
                scroll.append(errorElement);

                var retryButton = $('<div class="selector" style="padding: 15px; margin: 20px; background: rgba(255,255,255,0.2); border-radius: 8px; text-align: center; font-weight: bold;">' +
                    'üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫' +
                    '</div>');

                retryButton.on('hover:enter', () => {
                    this.showMainScreen();
                });

                scroll.append(retryButton);
            };

            this.pause = function() {};
            this.stop = function() {};
            this.destroy = function() {
                network.clear();
                if (scroll && scroll.destroy) scroll.destroy();
            };
        }

        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞
        function initAndrozon() {
            console.log('Initializing Androzon plugin...');

            // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
            Lampa.Component.add('androzon', component);
            console.log('Androzon component registered');

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ñ–∏–ª—å–º–æ–≤
            Lampa.Listener.follow('full', function(e) {
                if (e.type === 'complite') {
                    try {
                        var render = e.object.activity.render();
                        var movie = e.data.movie;
                        
                        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–Ω–æ–ø–∫–∏
                        render.find('.androzon-button').remove();
                        
                        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
                        var btn = $('<div class="full-start__button selector view--online androzon-button" style="background: linear-gradient(45deg, #FF6B35, #FF8E53); margin: 5px; border-radius: 8px;">' +
                            '<div style="display: flex; align-items: center; justify-content: center; padding: 12px 20px;">' +
                            '<span style="margin-right: 8px;">üé¨</span>' +
                            '<span style="font-weight: bold;">Androzon</span>' +
                            '</div>' +
                            '</div>');

                        btn.on('hover:enter', function() {
                            Lampa.Activity.push({
                                url: '',
                                title: 'Androzon - ' + (movie.title || movie.name),
                                component: 'androzon',
                                movie: movie,
                                page: 1
                            });
                        });

                        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É
                        var buttonsContainer = render.find('.full-start__buttons');
                        if (buttonsContainer.length) {
                            buttonsContainer.prepend(btn);
                        }

                        console.log('Androzon button added for:', movie.title);
                    } catch (error) {
                        console.error('Error adding button:', error);
                    }
                }
            });

            console.log('Androzon plugin ready!');
        }

        // –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–≥–¥–∞ Lampa –≥–æ—Ç–æ–≤–∞
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', initAndrozon);
        } else {
            initAndrozon();
        }

    } catch (error) {
        console.error('Androzon plugin fatal error:', error);
    }
})();
